
package com.luis.ciberloja.soap;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import jakarta.xml.ws.Service;
import jakarta.xml.ws.WebEndpoint;
import jakarta.xml.ws.WebServiceClient;
import jakarta.xml.ws.WebServiceException;
import jakarta.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 3.0.2
 * Generated source version: 3.0
 * 
 */
@WebServiceClient(name = "Website", targetNamespace = "http://tempuri.org/", wsdlLocation = "file:/C:/Users/Luis/eclipse-workspace/ciberloja/ciberloja/src/main/resources/website.wsdl")
public class Website
    extends Service
{

    private final static URL WEBSITE_WSDL_LOCATION;
    private final static WebServiceException WEBSITE_EXCEPTION;
    private final static QName WEBSITE_QNAME = new QName("http://tempuri.org/", "Website");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/Luis/eclipse-workspace/ciberloja/ciberloja/src/main/resources/website.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        WEBSITE_WSDL_LOCATION = url;
        WEBSITE_EXCEPTION = e;
    }

    public Website() {
        super(__getWsdlLocation(), WEBSITE_QNAME);
    }

    public Website(WebServiceFeature... features) {
        super(__getWsdlLocation(), WEBSITE_QNAME, features);
    }

    public Website(URL wsdlLocation) {
        super(wsdlLocation, WEBSITE_QNAME);
    }

    public Website(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, WEBSITE_QNAME, features);
    }

    public Website(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public Website(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns WebsiteSoap
     */
    @WebEndpoint(name = "WebsiteSoap")
    public WebsiteSoap getWebsiteSoap() {
        return super.getPort(new QName("http://tempuri.org/", "WebsiteSoap"), WebsiteSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebsiteSoap
     */
    @WebEndpoint(name = "WebsiteSoap")
    public WebsiteSoap getWebsiteSoap(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "WebsiteSoap"), WebsiteSoap.class, features);
    }

    /**
     * 
     * @return
     *     returns WebsiteSoap
     */
    @WebEndpoint(name = "WebsiteSoap12")
    public WebsiteSoap getWebsiteSoap12() {
        return super.getPort(new QName("http://tempuri.org/", "WebsiteSoap12"), WebsiteSoap.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link jakarta.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns WebsiteSoap
     */
    @WebEndpoint(name = "WebsiteSoap12")
    public WebsiteSoap getWebsiteSoap12(WebServiceFeature... features) {
        return super.getPort(new QName("http://tempuri.org/", "WebsiteSoap12"), WebsiteSoap.class, features);
    }

    private static URL __getWsdlLocation() {
        if (WEBSITE_EXCEPTION!= null) {
            throw WEBSITE_EXCEPTION;
        }
        return WEBSITE_WSDL_LOCATION;
    }

}
